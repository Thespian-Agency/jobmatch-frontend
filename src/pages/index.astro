---
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";
import Section from "../layouts/Section.astro";
import ServiceShowcase, {
  type ServiceType,
} from "../components/ServiceShowcase.astro";
import "../styles/global.css";
import ProfileIconsGraphic from "../react/ProfileIconsGraphic.tsx";
import SelectionItems from "../react/SelectionItems.tsx";
import { getEntry, type CollectionEntry } from "astro:content";
import TestimonialSlider from "../react/TestimonialSlider.tsx";
import FAQ from "../react/FAQ.tsx";
import ContactForm from "../react/ContactForm.tsx";
import HeroCarousel from "../react/HeroCarousel.tsx";
import Button from "../react/Button";
import { withBase } from "../utils/withBase";

const homepage = (await getEntry(
  "homepage",
  "-index"
)) as CollectionEntry<"homepage">;
const {
  buttons,
  hero,
  services,
  results,
  profiles,
  advantages,
  testimonials,
  our_process,
  team_player,
  for_who,
  faq,
  form,
} = homepage.data;
---

<Layout>
  <Section className="flex w-full justify-between desktop:flex-row flex-col">
    <div
      class="left-part py-80 max-w-[600px] w-full desktop:w-1/2 flex flex-col gap-24"
    >
      <div class="flex flex-col gap-24">
        <h1
          set:html={hero.title}
          class="heading-2xl text-title-grey font-medium"
        />
        <p class="heading-xs font-light text-description-grey">
          {hero.description}
        </p>
      </div>
      <div class="flex gap-24">
        <Button client:visible size="L" variant="primary"
          >{buttons["schedule_demo"]}</Button
        >
        <Button client:visible size="L" variant="secondary"
          >{buttons["contact_us"]}</Button
        >
      </div>
    </div>
    <HeroCarousel client:visible />
  </Section>
  <Section id="services" className="gap-80 flex flex-col" pt pb>
    <div class="top-part flex flex-col gap-40">
      <h2 class="heading-2xl font-light text-title-grey">
        {services.title}
      </h2>
      <p class="body-xl font-light text-description-grey">
        {services.subtitle}
      </p>
    </div>
    <div class="grid tablet:grid-cols-2 grid-cols-1 gap-44">
      {
        Object.values(services.items).map((service, index) => (
          <ServiceShowcase service={service} index={index + 1} />
        ))
      }
    </div>
  </Section>
  <Section
    id="interpretation"
    className="flex w-full justify-between desktop:flex-row flex-col gap-80"
    pt
    pb
  >
    <div
      class="left-part max-w-[600px] w-full desktop:w-1/2 flex flex-col gap-24"
    >
      <div class="flex flex-col gap-24">
        <h2 class="heading-2xl text-title-grey font-light">
          {results.title}
        </h2>
        <p class="heading-xs font-light text-description-grey">
          {results.description}
        </p>
      </div>
      <div class="flex gap-24">
        <Button client:visible size="L" variant="primary"
          >{buttons["schedule_iterpretation"]}</Button
        >
      </div>
    </div>
    <Image
      class="desktop:absolute relative right-0 top-0 w-full desktop:w-2/5 h-full desktop:rounded-l-32 rounded-t-32 object-cover"
      src={withBase("/images/results.webp")}
      alt="JobMatch result"
      width={500}
      height={500}
    />
  </Section>
  <Section pt pb className="flex justify-center">
    <div class="flex flex-col gap-56 items-center">
      <div class="flex flex-col gap-24 max-w-[780px] items-center">
        <h2
          set:html={profiles.title}
          class="heading-2xl text-title-grey font-light text-center"
        />
        <p
          class="body-xl font-light text-description-grey text-center max-w-[600px]"
        >
          {profiles.description}
        </p>
        <div class="flex gap-24 justify-center">
          <Button client:visible size="L" variant="primary"
            >{buttons["schedule_demo"]}</Button
          >
          <Button client:visible size="L" variant="secondary"
            >{buttons["contact_us"]}</Button
          >
        </div>
      </div>
      <ProfileIconsGraphic client:visible />
    </div>
  </Section>
  <Section id="advantages" pt pb className="flex flex-col gap-80">
    <div class="flex flex-col gap-40">
      <h2 class="heading-2xl text-title-grey font-light">
        {advantages.title}
      </h2>
      <p class="body-xl font-light text-description-grey max-w-[600px]">
        {advantages.subtitle}
      </p>
    </div>
    <SelectionItems client:idle items={advantages.items} />
  </Section>
  <Section id="testimonials" pt pb>
    <TestimonialSlider client:idle testimonials={testimonials} />
  </Section>
  <Section id="process" pt pb className="flex flex-col gap-80">
    <h2 class="heading-2xl text-title-grey font-light">
      {our_process.title}
    </h2>
    <div class="flex gap-24 desktop:flex-row flex-col">
      {
        our_process.items.map((item, index) => (
          <div class="flex flex-col w-full gap-24 bg-[#F7F7F7] p-24 rounded-32">
            <Image
              src={withBase(`/icons/process-${index + 1}.png`)}
              alt="JobMatch process"
              width={56}
              height={56}
            />
            <h3 class="heading-xs text-title-grey font-medium">{item.title}</h3>
            <p class="body-l font-light text-description-grey">
              {item.description}
            </p>
          </div>
        ))
      }
    </div>
  </Section>
  <Section pt pb className="">
    <div class="relative w-full flex items-end justify-end aspect-[2/1]">
      <Image
        src={withBase("/images/team-player.webp")}
        alt="JobMatch team player"
        width={500}
        height={500}
        class="absolute right-0 top-0 w-full h-full rounded-32 object-cover"
      />
      <div
        class="absolute inset-0 bg-gradient-to-b from-transparent to-black/50 rounded-32"
      >
      </div>
      <div
        class="flex w-full justify-between items-end gap-40 relative p-56 desktop:flex-row flex-col"
      >
        <div class="flex flex-col gap-24 max-w-[560px]">
          <h2 class="heading-2xl text-fg-grey-primary-white font-medium">
            {team_player.title}
          </h2>
          <p class="body-xl font-light text-fg-grey-primary-white">
            {team_player.description}
          </p>
        </div>
        <div class="flex gap-24 desktop:flex-row flex-col">
          <Button client:visible size="L" variant="primary"
            >{buttons["try_for_free"]}</Button
          >
          <Button client:visible size="L" variant="secondary"
            >{buttons["contact_us"]}</Button
          >
        </div>
      </div>
    </div>
  </Section>
  <Section pt pb className="flex flex-col gap-80">
    <h2
      class="heading-2xl text-title-grey font-light"
      class:list={["max-w-[600px]"]}
    >
      {for_who.title}
    </h2>
    <div class="grid tablet:grid-cols-4 grid-cols-1 gap-0">
      {
        for_who.items.map((item, index) => (
          <div
            class:list={[
              "flex flex-col gap-24 px-24 tablet:first:pl-0 tablet:last:pr-0 py-16",
              {
                "tablet:border-r tablet:border-b-0  border-b border-stroke-grey-primary":
                  index !== for_who.items.length - 1,
              },
            ]}
          >
            <h3 class="heading-xs text-title-grey font-medium">{item.title}</h3>
            <p class="body-l font-light text-description-grey">
              {item.description}
            </p>
          </div>
        ))
      }
    </div>
  </Section>
  <Section id="faq" pt pb className="flex flex-col gap-80">
    <div class="flex flex-col gap-40">
      <h2 class="heading-2xl text-title-grey font-light">
        {faq.title}
      </h2>
    </div>
    <FAQ client:idle items={faq.items} />
  </Section>
  <Section
    id="contact"
    pt
    pb
    className="flex w-full justify-between desktop:flex-row flex-col gap-80"
  >
    <div class="max-w-[400px]">
      <h2 class="heading-2xl text-title-grey font-semibold">
        {form.title}
      </h2>
    </div>
    <ContactForm client:only="react" form={form} />
  </Section>
</Layout>
